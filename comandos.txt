1) dotnet tool list -g => Lista quais as ferramentas de apoio ao dotnet estão instaladas

2) dotnet tool install --global dotnet-ef => Instala a ferramenta dotnet-ef

3) dotnet ef migrations add InitialCreate -o Data/Migrations => Executa a criação da base de dados dentro do diretório Migrations dentro de Data, já existente.

4) dotnet ef database update => Atualiza a base de dados já existente, caso essa não exista, o EF criará.

5) git init => Cria um repositório Git local

6) dotnet ef database drop -p Infrastructure -s API => Remove o migrations da camada de API
7) dotnet ef migrations remove -p Infrastructure -s API => Remove o snapshot da camada de API.
8) dotnet ef migrations add InitialCreate -p Infrastructure -s API -o Data/Migrations => Gera o Banco de Dados via Migrations
9) dotnet add package StackExchange.Redis --version 2.0.601 => instala o Redis. Instalar na Camada de Infrastructure
10) Instalar o Microsoft.AspNetCore.EntityFrameworkCore v5.0.3 da Nuget Gallery no Projeto Core;
11) Instalar o Microsoft.AspNetCore.Identity v2.0.2 da Nuget Gallery no Projeto Infrastructure;
12) Instalar o Microsoft.IdentityModel.Tokens v6.8.0 da Nuget Gallery no Projeto Infrastructure;
13) Instalar o Microsoft.IdentityModel.Tokens.Jwt v6.8.0 da Nuget Gallery no Projeto Infrastructure;
14) dotnet ef migrations add IdentityInitial -p Infrastructure -s API -c AppIdentityDbContext -o Identity/Migrations => Gera o Banco de dados do Identity baseado nas configurações na Startup.cs
15) https://regexlib.com/ => Site contendo muitos modelos prontos de Expressões regulares por assunto.